function P = describeAndPlotFinancialSeries(iniDate, endDate,...
    path, varargin)

% P = describeAndPlotFinancialSeries(iniDate, endDate,...
%     varargin)

% This code plots the Close Prices of the selected 
% variables (tickers)
% varargin determine the tickers that we want in the analysis
% iniDate and endDate are the point in time date that we
% want to start and finish with in the analysis
% requires a path folder, the folder path where the files are saved
% finally we obtain as output P, a structure array with prices,
% returns and the statitics of the financial series
% try, for exmaple:
% f = describeAndPlotFinancialSeries(startDate, ...
%     finalDate , '^GSPC', '^IBEX', '^GDAXI','^IXIC', ...
%     '000001.SS', 'BNP.PA', 'BAC', 'BBVA.MC', 'HSBC', 'SMFG');
% warning, we have a list of tickers  but maybe
% this list need to be updated, we included in the code an
% error message when the ticker is missed: the ticker and
% the name of the variable is required in the ftick variable.

% check folder
if ~exist(path, 'dir')
    mkdir(path)
end 

% list (maybe this list need to be updated with the ticker
% and name required)

ftick = {'^GSPC', 'SP500';...
    '^IBEX', 'IBEX35';...
    '^FCHI', 'CAC40';...
    '^FTSE', 'FTSE100';...
    '^N225', 'Nikkei225';...
    '000001.SS', 'SSECompInd';...
    'BAC', 'BankAmer';...
    'C', 'Citigroup';...
    'GS', 'GoldmanSachs';...
    'JPM', 'JPMorgCh';...
    'MS', 'MorgStanl';...
    'BBVA.MC', 'BBVA';...
    'SAN', 'Santander';...
    'CABK.MC', 'Caixabank';...
    'SAB.MC', 'Sabadell';...
    'BNP.PA', 'BNP';...
    'ACA.PA', 'CreditAgricole';...
    'GLE.PA', 'SocieteGenerale';...
    'HSBC', 'HSBC';...
    'BARC.L', 'Barclays';...
    'LLOY.L', 'Lloyds';...
    'RBS.L', 'RoyalBankScot';...
    'MTU', 'MitsubishiBank';...
    'SMFG', 'SumitoBank';...
    'MFG', 'MizuhoBank';...
    '601398.SS', 'ICBC';...
    '601939.SS', 'CBC';...
    '601288.SS', 'ABC';...
    '^GDAXI', 'DAX';...
    '^IXIC', 'NASDAQ';...
    'MSFT', 'Microsoft';...
    'AMZN', 'Amazon';...
    'APPL', 'Apple';... 
    'GOOG', 'Google';...
    'PG', 'Proct&Gamb';...
    'BA', 'Boing'; 
    };

% download the data
if iscell(varargin)
    dtick = varargin{1,:};
else 
    dtick = varargin;
end 

% download the prices
idx = ismember(ftick, dtick);
rtick = ftick(idx(:,1), :);
dtick2 = rtick(:, 1);
% error message if we need to update the ftick list
if size(dtick2, 1) ~= size(dtick,2)
    missedTickersloc = ismember(dtick, dtick2);
    missedTickers = strjoin(dtick(~missedTickersloc), ', ');
    error(['There are missed tickers. Consider update the list ',...
        'ftick in the code with the following tickers: ', ...
        missedTickers])
end

% download prices
stocks = hist_stock_data(iniDate,endDate, dtick2);
m = size(stocks, 2);

% prices and returns

for i = 1 : m
    % prices
    prices = stocks(i).Close;
    % returns
    ret = price2ret(prices);
    ret = [0; ret];
    st = describeStats(prices);
    P(i).Prices = prices;
    P(i).Returns = ret; 
    P(i).Stats = st;
    P(i).Name = [char(string(rtick(i, 2))), '_', iniDate, ...
        '_',endDate];
    % dates
    D  = stocks(i).Date;
    sD = datenum(D(1));
    eD = datenum(D(size(D, 1)));
    xD = linspace(sD, eD, size(D, 1));
    m1 = size(xD, 2);
    m2 = size(prices, 1);
    if m1 > m2
        xD = linspace(sD, eD, size(D, 1) - 1);
    end
    % plot
    % to plot we need divide the plot area and this
    % depend on the numebers of variables, i.e., tickers
    p1 = figure('visible', 'off', 'units', 'normalized', ...
    'outerposition', [0 0 1 1]);
    yyaxis left
    plot(xD, prices), xlim([sD eD])
    datetick('x', 'yyyy','keeplimits');
    yyaxis right
    plot(xD, ret), xlim([sD eD])
    hold on
    bswan = -(ones(1, m2)* abs(mean(ret)+ 6*std(ret)));
    plot(xD, bswan, 'k--')
    datetick('x', 'yyyy', 'keeplimits');
    yyaxis left , ylabel('prices'), xlabel('Dates')
    title(['Prices and Returns ', char(string(rtick(i, 2)))])
    yyaxis right, ylabel('returns')
    legend ('Prices', 'Returns','BlackSwanCutoff', ...
        'Location', 'north');
    saveas(p1, [path,'prices and returns of ', ....
        char(string(rtick(i, 2))), ' from ', iniDate, ...
        ' to ', endDate], 'jpg')
    clear prices D
end
end