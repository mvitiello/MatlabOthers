function [tableBackTestingES, tableBackTestingESDin]  = ...
    doBacktestingES(startDate, endDate, model, path, varargin)

% [tableBackTestingES,tableBackTestingESDin]  = ...
%     doBacktestingES(startDate, endDate, model, path, varargin)

% this code calculates a backtesting of the "static" and "dynamic"
% ES obtained from the model (specified as input)
% first, obtain a backtesting of the estatic ES at 95% and 99%
% with real returns and simulated returns (with model specified)
% second, obtain a backtesting of the dynamic ES at 95% and 99%
% with real returns and simulated returns (with model specified)
% varargin determine the tickers that we want in the analysis
% iniDate and endDate are the point in time date that we
% want to start and finish with in the analysis
% requires a path folder, the folder path where the files are saved
% finally we obtain as output tableBackTestingES and
% tableBackTestingESDin, two structure array
% with all backtesting ES calculated from the financial series
% with static ES and dinamic ES, respectevely.
% try, for exmaple:
% model = {'BrowG', 'MJDM', 'VG', 'HAW'};
% [BcktTableES, BckTableESDin]  = doBacktestingES('01012014', ...
%     '01012018', model, 'C:\Users\Desktop\Matlab', '^GSPC',...
%     '^IBEX', '^GDAXI', '^IXIC', '000001.SS', 'BNP.PA', ...
%     'BAC', 'BBVA.MC', 'HSBC', 'SMFG');
% warning, we have a list of tickers  but maybe
% this list need to be updated, we included in the code an
% error message when the ticker is missed: the ticker and
% the name of the variable is required in the ftick variable.

% check folder
if ~exist(path, 'dir')
    mkdir(path)
end


% list (maybe this list need to be updated with the ticker
% and name required)

ftick = {'^GSPC', 'SP500';...
    '^IBEX', 'IBEX35';...
    '^FCHI', 'CAC40';...
    '^FTSE', 'FTSE100';...
    '^N225', 'Nikkei225';...
    '000001.SS', 'SSECompInd';...
    'BAC', 'BankAmer';...
    'C', 'Citigroup';...
    'GS', 'GoldmanSachs';...
    'JPM', 'JPMorgCh';...
    'MS', 'MorgStanl';...
    'BBVA.MC', 'BBVA';...
    'SAN', 'Santander';...
    'CABK.MC', 'Caixabank';...
    'SAB.MC', 'Sabadell';...
    'BNP.PA', 'BNP';...
    'ACA.PA', 'CreditAgricole';...
    'GLE.PA', 'SocieteGenerale';...
    'HSBC', 'HSBC';...
    'BARC.L', 'Barclays';...
    'LLOY.L', 'Lloyds';...
    'RBS.L', 'RoyalBankScot';...
    'MTU', 'MitsubishiBank';...
    'SMFG', 'SumitoBank';...
    'MFG', 'MizuhoBank';...
    '601398.SS', 'ICBC';...
    '601939.SS', 'CBC';...
    '601288.SS', 'ABC';...
    '^GDAXI', 'DAX';...
    '^IXIC', 'NASDAQ';...
    'MSFT', 'Microsoft';...
    'AMZN', 'Amazon';...
    'APPL', 'Apple';...
    'GOOG', 'Google';...
    'PG', 'Proct&Gamb';...
    'BA', 'Boing';
    };

% download the data
if iscell(varargin)
    dtick = varargin{1,:};
else
    dtick = varargin;
end

idx = ismember(ftick, dtick);
rtick = ftick(idx(:, 1), :);
dtick2 = rtick(:, 1);
% error message if we need to update the ftick list
if size(dtick2, 1) ~= size(dtick,2)
    missedTickersloc = ismember(dtick, dtick2);
    missedTickers = strjoin(dtick(~missedTickersloc), ', ');
    error(['There are missed tickers. Consider update the list ',...
        'ftick in the code with the following tickers: ', ...
        missedTickers])
end

m = size(dtick2, 1);
n = size(model, 2);
pv = [0.05 0.01];

% BACKTESTING 'Estatic' ES
for i = 1 : m
    % read the xls files
    for j = 1 : n
        tickname = dtick2(i);
        disp(['Reading Prices from ', char(string(rtick(i, 2))),...
            ' in ', datestr(datetime(startDate, 'InputFormat',...
            'ddMMyyyy'), 'dd-mm-yyyy'),' to ', ...
            datestr(datetime(endDate,...
            'InputFormat','ddMMyyyy'), 'dd-mm-yyyy')])
        % catch returns
        ret = readtable([path, char(string(rtick(i, 2))), ...
            '_PricesRealSimul_', ...
            char(string(model(1, j))),'_', datestr(datetime(startDate, 'InputFormat',...
            'ddMMyyyy'), 'ddmmyyyy'),' to ', ...
            datestr(datetime(endDate,...
            'InputFormat','ddMMyyyy'), 'ddmmyyyy'),'.xls'], 'Sheet', 1);
        R(i, j).ret = ret;
        % catch VAR/ES
        VARES = readtable([path, char(string(rtick(i, 2))), ...
            '_VARESRealSimul_',...
            char(string(model(1, j))),'_',...
            datestr(datetime(startDate,'InputFormat',...
            'ddMMyyyy'), 'ddmmyyyy'), ' to ', ...
            datestr(datetime(endDate, 'InputFormat', 'ddMMyyyy'),...
            'ddmmyyyy'), '.xls'], 'Sheet', 1);
        V(i, j).VARES = VARES;
        
        % real returns
        R(i, j).ret.Properties.VariableNames(3) = {'Real_Returns'};
        ret.Properties.VariableNames(3) = {'Real_Returns'};
        rettobacktest = R(i, j).ret.Real_Returns;
        
        % ES 95 and 99
        v95 = V(1).VARES.ES95(1);
        v99 = V(1).VARES.ES99(1);
        
        disp(['Backtesting ES with real returns from ',...
            char(string(rtick(i, 2))),...
            ' model ', char(string(model(1, j))),...
            ' in ', datestr(datetime(startDate, 'InputFormat',...
            'ddMMyyyy'), 'dd-mm-yyyy'),' to ',...
            datestr(datetime(endDate,...
            'InputFormat','ddMMyyyy'), 'dd-mm-yyyy')])
        
        % backtesting at 95%
        tV95 =  bcktstingexepshrtfall(rettobacktest, v95, pv(1),...
            tickname, ftick, 1, model(1, j), 0, 0);
        tableBackTestingES(i, j).V95R = tV95;
        
        % save it in a xls file
        Excel = actxserver('Excel.Application');
        writetable(tV95, [path, char(string(rtick(i, 2))),...
            '_ESBckTst95.xls'], 'Sheet', 1, 'WriteRowNames', 1)
        excelWorkbook = Excel.workbooks.Open([path,...
            char(string(rtick(i, 2))), '_ESBckTst95.xls']);
        Excel.Worksheets.Item(1).Name = ...
            [char(string(rtick(i, 2))), '_ES95rr'];
        Excel.ActiveWorkbook.Save();
        % Close the workbook.
        excelWorkbook.Close(false);
        % Shut down Excel.
        Excel.Quit;
        
        % using 99%
        tV99 = bcktstingexepshrtfall(rettobacktest, v99, pv(2),...
            tickname, ftick, 1, model(1, j), 0, 0);
        tableBackTestingES(i, j).V99R = tV99;
        
        % save it in a xls file
        Excel = actxserver('Excel.Application');
        writetable(tV99, [path, char(string(rtick(i, 2))),...
            '_ESBckTst99.xls'], 'Sheet',1, 'WriteRowNames', 1)
        excelWorkbook = Excel.workbooks.Open([path,...
            char(string(rtick(i, 2))),  '_ESBckTst99.xls']);
        Excel.Worksheets.Item(1).Name = ...
            [char(string(rtick(i, 2))),'_ES99rr'];
        Excel.ActiveWorkbook.Save();
        % Close the workbook.
        excelWorkbook.Close(false);
        % Shut down Excel.
        Excel.Quit;
        
        disp(['Backtesting ES with  simulated returns from ',...
            char(string(rtick(i, 2))),...
            ', model ', char(string(model(1, j))),...
            ' in ', datestr(datetime(startDate, 'InputFormat',...
            'ddMMyyyy'), 'dd-mm-yyyy'),' to ',...
            datestr(datetime(endDate,...
            'InputFormat','ddMMyyyy'), 'dd-mm-yyyy')])
        
        % simulated returns
        R(i, j).ret.Properties.VariableNames(4) = ...
            {'Simulated_Returns'};
        ret.Properties.VariableNames(4) = {'Simulated_Returns'};
        rettobacktests = R(i, j).ret.Simulated_Returns;
        v95s = V(i, j).VARES.ES95(2);
        v99s = V(i, j).VARES.ES99(2);
        
        % backtesting at 95%
        tV95s = bcktstingexepshrtfall(rettobacktests, v95s, pv(1),...
            tickname, ftick, 0, model(1, j), 0, 0);
        tableBackTestingES(i, j).V95S = tV95s;
        
        % save it in a xls file
        Excel = actxserver('Excel.Application');
        writetable(tV95s, [path, char(string(rtick(i, 2))),...
            '_ESBckTst95_',char(string(model(1, j))),'.xls'],...
            'Sheet', j + 1, 'WriteRowNames', 1)
        excelWorkbook = Excel.workbooks.Open([path,...
            char(string(rtick(i, 2))), '_ESBckTst95_', ...
            char(string(model(1, j))),'.xls']);
        Excel.Worksheets.Item(j + 1).Name = ...
            [char(string(rtick(i, 2))),...
            '_ES95rs_', char(string(model(1, j)))];
        Excel.ActiveWorkbook.Save();
        % Close the workbook.
        excelWorkbook.Close(false);
        % Shut down Excel.
        Excel.Quit;
        
        % Backtesting at 99%
        tV99s = bcktstingexepshrtfall(rettobacktests, v99s, pv(2),...
            tickname, ftick, 0, model(1, j), 0, 0);
        tableBackTestingES(i, j).V99S = tV99s;
        
        % save it in a xls file
        Excel = actxserver('Excel.Application');
        writetable(tV99s, [path, char(string(rtick(i, 2))), ...
            '_ESBckTst99_', char(string(model(1, j))),'.xls'],...
            'Sheet', j + 1, 'WriteRowNames', 1)
        excelWorkbook = Excel.workbooks.Open([path,...
            char(string(rtick(i, 2))), '_ESBckTst99_',...
            char(string(model(1, j))),'.xls']);
        Excel.Worksheets.Item(j + 1).Name = ...
            [char(string(rtick(i, 2))),...
            '_ES99rs_', char(string(model(1, j)))];
        Excel.ActiveWorkbook.Save();
        % Close the workbook.
        excelWorkbook.Close(false);
        % Shut down Excel.
        Excel.Quit
    end
end

% BACKTESTING DINAMIC ES
for i = 1:m
    % reading xls
    for j = 1:n
        tickname = dtick2(i);
        ret = readtable([path, char(string(rtick(i, 2))), ...
            '_PricesRealSimul_', ...
            char(string(model(1, j))),'_', datestr(datetime(startDate, 'InputFormat',...
            'ddMMyyyy'), 'ddmmyyyy'),' to ', ...
            datestr(datetime(endDate,...
            'InputFormat','ddMMyyyy'), 'ddmmyyyy'),'.xls'], 'Sheet', 1);
        disp(['Reading ',char(string(rtick(i, 2))), '_', ...
            char(string(model(1, j))),...
            '.Now with Backtesting Dinamic ES'])
        R(i, j).ret = ret;
        [~,ShN] = xlsfinfo([path, char(string(rtick(i, 2))),...
            '_VARESRealSimul_', char(string(model(1, j))),'_',...
            datestr(datetime(startDate,'InputFormat',...
            'ddMMyyyy'), 'ddmmyyyy'), ' to ', ...
            datestr(datetime(endDate, 'InputFormat', 'ddMMyyyy'),...
            'ddmmyyyy'), '.xls']);
        msh = length(ShN);
        for k = 1 : msh
            Name = ShN{k};
            V = readtable([path, char(string(rtick(i, 2))),...
                '_VARESRealSimul_',...
                char(string(model(1, j))),'_',...
                datestr(datetime(startDate,'InputFormat',...
                'ddMMyyyy'), 'ddmmyyyy'), ' to ', ...
                datestr(datetime(endDate, 'InputFormat', ...
                'ddMMyyyy'), 'ddmmyyyy'), '.xls'],'Sheet',Name);
            VAR(k).Name = Name;
            VAR(k).V = V;
        end
        
        % ES 95 and 99 - real returns
        t95 = VAR(1).V.ES95(1);
        t99 = VAR(1).V.ES99(1);
        
        % loop for every method - real returns
        for h = 2:2:6
            
            if isempty(VAR(h).V)
                h = 2 + h ;
            end
            
            % catch method
            splitname = split(VAR(h).Name,"_");
            fullmethod = char(splitname(2));
            method = fullmethod(1:4);
            % real returns and dinamic VaR
            R(i, j).ret.Properties.VariableNames(3) = ...
                {'Real_Returns'};
            rettobacktest = R(i, j).ret.Real_Returns;
            % select ES for every method
            if sum(strcmp(method, 'PVAR'))
                if sum(strcmp(model(1, j), 'BrowG'))
                    v95 = [VAR(h).V.ESN95 VAR(h).V.ESt95];
                else
                    v95 = VAR(h).V.V95;
                end
            elseif sum(strcmp(method, 'EWMA'))
                v95 = [VAR(h).V.ESEWMAN95 VAR(h).V.ESEWMAT95];
            else
                v95 = VAR(h).V.ES95;
            end
            
            % backtesting
            disp(['Backtesting "dynamic" ES with real returns',...
                ' from ', char(string(rtick(i, 2))),', model ', ...
                char(string(model(1, j))),...
                ' and method ', char(string(method)), ' in ', ...
                datestr(datetime(startDate, 'InputFormat',...
                'ddMMyyyy'), 'dd-mm-yyyy'),' to ',...
                datestr(datetime(endDate,...
                'InputFormat','ddMMyyyy'), 'dd-mm-yyyy')])
            
            % backtesting at 95%
            window = size(rettobacktest,1) - size(v95,1);
            tVD95 = bcktsting2dvexepshrtfall(rettobacktest(window...
                + 1 : end), v95, pv(1), t95, tickname, ftick, 1, ...
                model(1, j), 1, method);
            tableBackTestingESDin(i, j).VD95R = tVD95;
            writetable(tVD95, [path, char(string(rtick(i, 2))),...
                '_ESBckTst95_', char(string(method)),'.xls'],...
                'Sheet',j + 1, 'WriteRowNames', 1)
            Excel = actxserver('Excel.Application');
            excelWorkbook = Excel.workbooks.Open([path,...
                char(string(rtick(i, 2))), '_ESBckTst95_',...
                char(string(method)),'.xls']);
            
            % save xls
            Excel.Worksheets.Item(j + 1).Name = ...
                [char(string(rtick(i, 2))),...
                '_ESD95rr_',char(string(method)),'_',...
                char(string(model(1, j)))];
            Excel.ActiveWorkbook.Save();
            % Close the workbook.
            excelWorkbook.Close(false);
            % Shut down Excel.
            Excel.Quit;
            
            % select ES for every method
            if sum(strcmp(method, 'PVAR'))
                if sum(strcmp(model(1, j), 'BrowG'))
                    v99 = VAR(h).V.ESN99;
                else
                    v99 = VAR(h).V.V99;
                end
            elseif sum(strcmp(method, 'EWMA'))
                v99 = VAR(h).V.ESEWMAN99;
            else
                v99 = VAR(h).V.ES99;
            end
            
            % backtesting at 99%
            tVD99 = bcktsting2dvexepshrtfall(rettobacktest(window ...
                + 1 : end), v99, pv(2),t99,tickname, ftick, 1, ...
                model(1, j), 1, method);
            tableBackTestingESDin(i, j).VD99R = tVD99;
            writetable(tVD99, [path, char(string(rtick(i, 2))),...
                '_ESBckTst99_', char(string(method)),'.xls'],...
                'Sheet',j + 1, 'WriteRowNames', 1)
            
            % save xls
            Excel = actxserver('Excel.Application');
            excelWorkbook = Excel.workbooks.Open([path,...
                char(string(rtick(i, 2))), '_ESBckTst99_',...
                char(string(method)),'.xls']);
            Excel.Worksheets.Item(j + 1).Name = ...
                [char(string(rtick(i, 2))),...
                '_ESD99rr_',char(string(method)),'_',...
                char(string(model(1, j)))];
            Excel.ActiveWorkbook.Save();
            % Close the workbook.
            excelWorkbook.Close(false);
            % Shut down Excel.
            Excel.Quit;
        end
        
        % ES 95 and 99 - simulated returns
        t95s = VAR(1).V.ES95(2);
        t99s = VAR(1).V.ES99(2);
        
        % loop for every method - simulated returns
        for h = 3:2:7
            
            if isempty(VAR(h).V)
                h = 2 + h;
            end
            
            % catch method
            splitname = split(VAR(h).Name,"_");
            fullmethod = char(splitname(2));
            method = fullmethod(1:4);
            % simulated returns and dynamic ES
            R(i, j).ret.Properties.VariableNames(4) = ...
                {'Simulated_Returns'};
            rettobacktest = R(i, j).ret.Simulated_Returns;
            
            % catch ES for every method
            if sum(strcmp(method, 'PVAR'))
                if sum(strcmp(model(1, j), 'BrowG'))
                    v95 = [VAR(h).V.ESN95 VAR(h).V.ESt95];
                else
                    v95 = VAR(h).V.V95;
                end
            elseif sum(strcmp(method, 'EWMA'))
                v95 = [VAR(h).V.ESEWMAN95 VAR(h).V.ESEWMAT95];
            else
                v95 = VAR(h).V.ES95;
            end
            
            disp(['Backtesting "dynamic" ES with simulated',...
                ' returns from ', char(string(rtick(i, 2))),...
                ', model ', char(string(model(1, j))),...
                ' and method ', char(string(method)), ' in ', ...
                datestr(datetime(startDate, 'InputFormat',...
                'ddMMyyyy'), 'dd-mm-yyyy'),' to ',...
                datestr(datetime(endDate,...
                'InputFormat','ddMMyyyy'), 'dd-mm-yyyy')])
            
            % backtesting at 95%
            window = size(rettobacktest,1) - size(v95,1);
            tVD95S = bcktsting2dvexepshrtfall(rettobacktest(window...
                + 1 : end), v95, pv(1),t95s, tickname, ftick, 0, ...
                model(1, j), 1, method);
            tableBackTestingESDin(i, j).VD95S = tVD95S;
            writetable(tVD95S, [path, char(string(rtick(i, 2))),...
                '_ESBckTst95_', char(string(method)),'_',...
                char(string(model(1, j))),'.xls'],...
                'Sheet',j + 1, 'WriteRowNames', 1)
            
            % save xls
            Excel = actxserver('Excel.Application');
            excelWorkbook = Excel.workbooks.Open([path,...
                char(string(rtick(i, 2))), '_ESBckTst95_',...
                char(string(method)),'_'...
                char(string(model(1, j))),'.xls']);
            Excel.Worksheets.Item(j + 1).Name = ...
                [char(string(rtick(i, 2))),...
                '_ESD95rs_',char(string(method)),'_',...
                char(string(model(1, j)))];
            Excel.ActiveWorkbook.Save();
            % Close the workbook.
            excelWorkbook.Close(false);
            % Shut down Excel.
            Excel.Quit;
            
            % catch ES for every method
            if sum(strcmp(method, 'PVAR'))
                if sum(strcmp(model(1, j), 'BrowG'))
                    v99 = [VAR(h).V.ESN99 VAR(h).V.ESt99];
                else
                    v99 = VAR(h).V.V99;
                end
            elseif sum(strcmp(method, 'EWMA'))
                v99 = VAR(h).V.ESEWMAN99;
            else
                v99 = VAR(h).V.ES99;
            end
            
            % backtesting at 99%
            tVD99S = bcktsting2dvexepshrtfall(rettobacktest(window...
                + 1 : end), v99, pv(2), t99s, tickname, ftick, 0, ...
                model(1, j), 1, method);
            tableBackTestingESDin(i, j).VD99S = tVD99S;
            writetable(tVD99S, [path, char(string(rtick(i, 2))),...
                '_ESBckTst99_',...
                char(string(method)),...
                '_',char(string(model(1, j))),'.xls'],...
                'Sheet',j + 1, 'WriteRowNames', 1)
            % save xls
            Excel = actxserver('Excel.Application');
            excelWorkbook = Excel.workbooks.Open([path,...
                char(string(rtick(i, 2))), '_ESBckTst99_',...
                char(string(method)),'_'...
                char(string(model(1, j))),'.xls']);
            Excel.Worksheets.Item(j + 1).Name = ...
                [char(string(rtick(i, 2))),...
                '_ESD99rs_',char(string(method)),'_',...
                char(string(model(1, j)))];
            Excel.ActiveWorkbook.Save();
            % Close the workbook.
            excelWorkbook.Close(false);
            % Shut down Excel.
            Excel.Quit;
        end
    end
end
end